$noop( Requires: "Release tag aggregation functions" & "Tagger script functions $is_lossless() and $is_lossy()" plugins )
$noop( Optional: "Auto Pad Disc and Track Numbers" & "Special Release Types" scripts )

$noop( Frequently used constants )
$set(_ReleaseYear,$year($if2(%releasedate%,%date%)))
$set(_Medium,$album_all(%media%))

$noop( Additional release types and release status, without "Album" and "Official" )
$unset(_AdditionalReleaseTypes)
$foreach(%releasetype%; %releasestatus%, $if($ne_all(%_loop_value%,Album,%_SpecialReleaseType%,Official),
	$copymerge(_AdditionalReleaseTypes,_loop_value)
))

$noop( Compose version info string for the album )
$if($gt(%_ReleaseYear%,$year(%originaldate%)),
	$set(_Reissue,%_ReleaseYear%)
)
$if($ne_all(%_Medium%,CD,Digital Media),
	$set(_ReleaseFormat,$replace(%_Medium%,Cassette,MC))
)
$setmulti(_AlbumInfo,%_Reissue%; %_ReleaseFormat%)
$cleanmulti(_AlbumInfo)

$noop( General snippets )
$set(_Year,$if2($year(%originaldate%),%_ReleaseYear%). )
$if(%_SeriesEpisode%,
	$set(_Volume,\(%_SeriesEpisode%\) )
)
$if(%_AdditionalReleaseTypes%,
	$set(_AdditionalReleaseTypes, [$join(%_AdditionalReleaseTypes%,+)])
)
$if(%_AlbumInfo%,
	$set(_AlbumInfo, [$join(%_AlbumInfo%, )])
)

$noop( Standard path components )
$set(_ArtistFolder,$join($replace(%albumartistsort%,/,-), & ))
$set(_AlbumFolder,
	%_Year%
	$replace(%album%,/,-)
	%_AdditionalReleaseTypes%
	%_AlbumInfo%
)
$set(_TrackTitle,$replace(%title%,/,-))

$noop( Special path components for releases that are part of a series )
$if(%_SeriesTitle%,
	$set(_SeriesFolder,$replace(%_SeriesTitle%,/,-))
	$set(_EpisodeFolder,
		%_Year%
		%_Volume%
		$replace(%_SeriesEpisodeTitle%,/,-)
		%_AdditionalReleaseTypes%
		%_AlbumInfo%
	)
)

$noop( File properties )
$if($ne_all(%_extension%,mp3,flac),
	$set(_FileFormat,$upper(%_extension%))
)
$if($and(%_bitrate%,$is_lossy()),
	$set(_LossyBitrate,$album_avg(_bitrate,0)kbps)
)
$if($gt(%_bits_per_sample%,16),
	$set(_HighPrecision,%_bits_per_sample%bit)
)
$if($gt(%_sample_rate%,44100),
	$set(_HighResolution,$div(%_sample_rate%,1000)kHz)
)
$setmulti(_FileInfo,%_FileFormat%; %_LossyBitrate%; %_HighPrecision%; %_HighResolution%)
$cleanmulti(_FileInfo)
$if(%_FileInfo%,
	$set(_FileInfo, [$join(%_FileInfo%, )])
)

$noop( Generate path from custom variables, fall back to standard tags )
$set(_Path,
	$noop( Root directory and artist/series folder )
	$if2(%_SpecialReleaseType%,Music)
	/
	$if2(%_SeriesFolder%,%_ArtistFolder%,%albumartist%,%artist%)
	/
	$noop( Release folder, except for standalone recordings )
	$if(%albumartist%,
		$if2(%_EpisodeFolder%,%_AlbumFolder%,%album%)%_FileInfo%
	/)
	$noop( Disc and track number, if available, except for standalone recordings )
	$if($and(%tracknumber%,%albumartist%),
		$if($gt(%totaldiscs%,1),
			$if2(%_PaddedDiscNum%,%discnumber%)
		.)
		$if($eq($num(%_musicbrainz_tracknumber%,0),0),$noop( e.g. $num(A1,0) => "0" )
			$if2(%_musicbrainz_tracknumber%,%_PaddedTrackNum%,%tracknumber%)
		,$noop( Track number is not alpha-numerical, prefer padded consecutive numbers )
			$if2(%_PaddedTrackNum%,%tracknumber%)
		)
	. )
	$noop( Track/Recording title )
	$if2(%_TrackTitle%,%title%)
	$noop( Track artist credits if different from the release's artist credit )
	$if($ne(%artist%,%albumartist%), -- 
		$if2(%_TrackArtist%,%artist%)
	)
)

$noop( Additional path replacements, e.g. to prevent replacement of illegal characters with an underscore )
$set(_SearchReplaceSeparator,=>)
$if($not(%_PathReplacements%),$setmulti(_PathReplacements,
$noop( Default regex rules, format: "search=>replace;")
[:\\?] => - ;
\\?\$=>;
"\(.+?\)"=>'\\1';
,;))

$noop( Loop over all valid path replacement rules )
$foreach(%_PathReplacements%,$if($eq(2,$lenmulti(%_loop_value%,%_SearchReplaceSeparator%)),
	$set(_SearchPattern,$getmulti(%_loop_value%,0,%_SearchReplaceSeparator%))
	$set(_ReplaceValue,$getmulti(%_loop_value%,1,%_SearchReplaceSeparator%))
	$set(_Path,$rreplace(%_Path%,%_SearchPattern%,%_ReplaceValue%))
))

$noop( Output the constructed path, remove line breaks and indentation caused by script formatting )
$rreplace(%_Path%,[\\t\\n]+,)
